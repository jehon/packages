#!/usr/bin/env bash

set -e

# Thanks to https://stackoverflow.com/a/454750/1954789
# See https://git-scm.com/docs/git-filter-branch
#


# shellcheck source=../jehon-base-minimal/usr/bin/jh-lib.sh
. jh-lib.sh

SWD="$(pwd)"
export SWD

git log > jh-git-cleanup.before.log

FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --prune-empty --env-filter '
    #
    # Variable that can be used:
    #    See https://git-scm.com/docs/git-commit
    #
    # GIT_AUTHOR_NAME
    # GIT_AUTHOR_EMAIL
    # GIT_AUTHOR_DATE
    # GIT_COMMITTER_NAME
    # GIT_COMMITTER_EMAIL
    # GIT_COMMITTER_DATE
    #

    ANON="jehon@users.noreply.github.com"

    log() {
        printf "$GIT_COMMIT | %-10s | %-35s | %-35s \n" "$1" "$2" "$3" >> $SWD/jh-git-cleanup.debug.log
    }

    replaceCommiters() {
        # 1: old email to be remplaced
        if [ "$GIT_AUTHOR_EMAIL" = "$1" ]; then
            export GIT_AUTHOR_EMAIL="$ANON"
            log "Author" "$GIT_AUTHOR_EMAIL" "$ANON"
        fi

        if [ "$GIT_COMMITER_EMAIL" = "$1" ]; then
            export GIT_COMMITER_EMAIL="$ANON"
            log "Commiter" "$GIT_COMMITER_EMAIL" "$ANON"
        fi
    }

    replaceCommiters "j.honlet@evs.com"
    replaceCommiters "jean.honlet@oniryx.be"
    replaceCommiters "jehon@wsl.nsicorp.local"
    replaceCommiters "jean.honlet@nsi-sa.be"
    replaceCommiters "1582670+jehon@users.noreply.github.com"
    replaceCommiters "jehon@jhn-hyperv.mshome.net"
    replaceCommiters "jehon@localhost.net"
    replaceCommiters "marielineetjean@gmail.com"
    replaceCommiters "marielineet.jean@gmail.com"

    #
    # Check the dates
    #

    TS="$( echo "$GIT_COMMITTER_DATE" | cut -d " " -f 1 )"
    TZ="$( echo "$GIT_COMMITTER_DATE" | cut -d " " -f 2 )"

    HR=$( date --date="$TS" "+%F %H-%M-%S" )
    WE=$( date --date="$TS" "+%u" )
    DAY=$( date --date="$TS" "+%F" )
    HOUR="$( date --date="$TS" "+%H" )"
    HOUR="${HOUR#0}"

    # log "test2" "$TS | $TZ | $HR | $WE | $DAY | $HOUR"

    if [ "$TZ" != "+0100" ] && [ "$TZ" != "+0200" ] && [ "$TZ" != "+0000" ]; then
        log "skipping" "$TZ ($DAY)"
        continue
    fi

    if [ "$DAY" != "$LASTDAY" ]; then
        LASTDAY="$DAY"
        LASTHOURSOURCE="$HOUR"
        LASTHOURTARGET="17"
        CNT="1"
    fi

    # echo "$HASH - $TS: $HR - ${WE}dow - ${HOUR}h (vs $LASTHOURSOURCE / $LASTHOURTARGET)"

    if [ "$WE" -lt 6 ] && [ "$HOUR" -gt 8 ]; then
        # echo "- need shift"
        NH=HOUR
        ND="$DAY"
        if [ $HOUR -gt $LASTHOURTARGET ]; then
            continue;
        fi
        if [ "$HOUR" = "$LASTHOURTARGET" ] && [ "$HOUR" = "$LASTHOURSOURCE" ]; then
            continue;
        fi

        if [ "$HOUR" -gt "$LASTHOURSOURCE" ]; then
                #    echo "- next hour"
                LASTHOURTARGET=$( expr $LASTHOURTARGET + 1)
                if [ "$LASTHOURTARGET" -gt 23 ] ; then
                    log "Too much shift on $DAY $HR -> $CNT"
                    NH="23-59-$( printf "%02d" ${CNT} )"
                    CNT=$( expr $CNT + 1 )
                    if [ "$CNT" -gt 59 ]; then
                        log "Too too much shift on $DAY: $CNT overflow"
                        exit 1
                        continue
                    fi
                fi
        fi

        LASTHOURSOURCE="$HOUR"
        NH="$LASTHOURTARGET"

        if [ "$NH" != "$HOUR" ]; then
            NEW="$ND $( date --date="$TS" "+$NH:%M:%S" ) $TZ"
            log "Timestamp" "$HR" "$NEW"
            export GIT_COMMITTER_DATE="$NEW"
            export GIT_AUTHOR_DATE="$NEW"
        fi
    fi
'
header "Remaining commiters: "
git log --all --full-history --format='%ae %an' | sort | uniq

ok "Done"

cat jh-git-cleanup.debug.log
git log > jh-git-cleanup.after.log

diff -y jh-git-cleanup.before.log jh-git-cleanup.after.log | less
